[{"E:\\MyFiles\\contact-list\\src\\index.js":"1","E:\\MyFiles\\contact-list\\src\\App.js":"2","E:\\MyFiles\\contact-list\\src\\reportWebVitals.js":"3","E:\\MyFiles\\contact-list\\src\\Components\\ContactsDescription\\Contactdescription.js":"4","E:\\MyFiles\\contact-list\\src\\Components\\ContactListHeader\\ContactListHeader.js":"5","E:\\MyFiles\\contact-list\\src\\Components\\ContactListTable\\ContactListtable.js":"6","E:\\MyFiles\\contact-list\\src\\Components\\SideBarComponent\\SideBarComponent.js":"7","E:\\MyFiles\\contact-list\\src\\Components\\HeaderComponent\\HeaderComponent.js":"8","E:\\MyFiles\\contact-list\\src\\Components\\CommonComponents\\Avathar.js":"9","E:\\MyFiles\\contact-list\\src\\Components\\AddContactModal\\AddContactModal.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1117,"mtime":1608376443500,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3168,"mtime":1608371996710,"results":"15","hashOfConfig":"12"},{"size":2724,"mtime":1608379606867,"results":"16","hashOfConfig":"12"},{"size":6742,"mtime":1608383244990,"results":"17","hashOfConfig":"12"},{"size":1510,"mtime":1608376210665,"results":"18","hashOfConfig":"12"},{"size":856,"mtime":1608376173441,"results":"19","hashOfConfig":"12"},{"size":1081,"mtime":1608376073571,"results":"20","hashOfConfig":"12"},{"size":6410,"mtime":1608378379811,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uqalw4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"E:\\MyFiles\\contact-list\\src\\index.js",[],["47","48"],"E:\\MyFiles\\contact-list\\src\\App.js",[],"E:\\MyFiles\\contact-list\\src\\reportWebVitals.js",[],"E:\\MyFiles\\contact-list\\src\\Components\\ContactsDescription\\Contactdescription.js",["49"],"import React, { useContext, useEffect } from 'react';\r\nimport './Assests/styles.scss';\r\nimport Avathar from '../../Components/CommonComponents/Avathar';\r\nimport { contactContext } from '../../App';\r\n\r\nconst Contactdescription = () => {\r\n    const [contactState, setContactState] = useContext(contactContext)\r\n    \r\n    useEffect(() => {\r\n        setContactState(contactState)\r\n    }, [contactState])\r\n\r\n\r\n    return(\r\n        <div className='contact-description'>\r\n            {\r\n                contactState.selectedUser ? \r\n                <>\r\n                    <div className='contact-head'>\r\n                        <div className='avathar-content'>\r\n                            <Avathar colorCode={contactState.selectedUser.avatharColor}  name={contactState.selectedUser.name} width={80} height={80}/>\r\n                        </div>\r\n                        <h3 className='contact-name'>\r\n                            {contactState.selectedUser.name}\r\n                        </h3>\r\n                    </div>\r\n                    <div className='contact-body'>\r\n                        <div className='user-name borderd'>\r\n                            <div className='title'>\r\n                                Full Name : \r\n                            </div>\r\n                            <div className='value'>{contactState.selectedUser.name}</div>\r\n                        </div>\r\n                        <div className='user-email borderd'>\r\n                            <div className='title'>    \r\n                                Email : \r\n                            </div>\r\n                            <div className='value'>\r\n                                {contactState.selectedUser.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className='user-phone borderd'>\r\n                            <div className='title'>\r\n                                Phone :\r\n                            </div>\r\n                            <div className='value'>  \r\n                                {contactState.selectedUser.phone}\r\n                            </div> \r\n                        </div>\r\n                        <div className='user-company borderd'>\r\n                            <div className='title'>\r\n                                Company : \r\n                            </div>\r\n                            <span className='value'>\r\n                                {contactState.selectedUser.company}\r\n                            </span>\r\n                        </div>\r\n                        <div className='user-address borderd'>\r\n                            <div className='title'>\r\n                                Address : \r\n                            </div>\r\n                            <div className='value'>\r\n                                { contactState.selectedUser.address }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                <div className='no-user-selected'>Select any contact from the contact list to view</div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contactdescription; \r\n","E:\\MyFiles\\contact-list\\src\\Components\\ContactListHeader\\ContactListHeader.js",[],"E:\\MyFiles\\contact-list\\src\\Components\\ContactListTable\\ContactListtable.js",["50","51"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport './Assets/styles.scss';\r\nimport EditIcon from './Assets/edit_svg.svg';\r\nimport DeleteIcon from './Assets/delete.svg';\r\nimport { contactContext } from \"../../App\";\r\nimport Avathar from '../CommonComponents/Avathar';\r\nimport AddContactModal from '../AddContactModal/AddContactModal';\r\n\r\nconst ContactsList = () => {\r\n    const [contactState, setContactState] = useContext(contactContext)\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [clickedIndex, setClickedIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setContactState(contactState);\r\n    },[ contactState ])\r\n\r\n    /**@function to save the contact */\r\n    const onSaveContact = (contactObj) => {\r\n        let tempUsers = [...contactState.users];\r\n        let tempselectedUser = contactState.selectedUser;\r\n        tempUsers[clickedIndex] = contactObj ;\r\n        if(JSON.stringify(contactState.users[clickedIndex] === JSON.stringify(tempselectedUser))){\r\n            setContactState({...contactState, users:tempUsers, selectedUser:tempselectedUser});\r\n        }\r\n        else{\r\n            setContactState({...contactState, users:tempUsers});\r\n        }\r\n        setShowModal(false);\r\n    }\r\n\r\n    /**@function to hide the modal */\r\n    const modalClose = () => {\r\n        setShowModal(false)\r\n    }\r\n\r\n    /**@function to show the description of the user */\r\n    const contactClick = (index) => {\r\n        let clickedCont = contactState.users[index];\r\n        setContactState({\r\n            ...contactState,\r\n            selectedUser:clickedCont\r\n        })\r\n    }\r\n\r\n    /**@function to delete contact */\r\n    const deleteContact = (index) => {\r\n        let clickedCont = [...contactState.users];\r\n        let tempselectedUser = contactState.selectedUser\r\n        if(clickedCont[index]){\r\n            clickedCont.splice(index, 1);\r\n            if(JSON.stringify(contactState.users[index]) === JSON.stringify(tempselectedUser)){\r\n                setContactState({\r\n                    ...contactState,\r\n                    users : clickedCont,\r\n                    selectedUser: null\r\n                })\r\n            }\r\n            else{\r\n                setContactState({\r\n                    ...contactState,\r\n                    users : clickedCont\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <div className='contacts-list' id='contacts-list-comp'>\r\n            {\r\n                showModal ? <AddContactModal \r\n                    userDetails={contactState.users[clickedIndex] ? contactState.users[clickedIndex] : {}} \r\n                    showModal={showModal} \r\n                    onClose={modalClose} \r\n                    onSave={onSaveContact}\r\n                    title={'Update Contact'}\r\n                /> : ''\r\n            }\r\n            <div className='contacts-list-table'>\r\n                {\r\n                    contactState.users.length > 0 ? \r\n                    <table id=\"contacts\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th id='add'>+</th>\r\n                                <th id='basic_info'>Basic Info</th>\r\n                                <th id='company'>Company</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                contactState.users.map((contact, index) => {\r\n                                    if(contact.name.toLowerCase().includes(contactState.searchText.toLowerCase())){\r\n                                        return(\r\n                                            <tr className={JSON.stringify(contact) === JSON.stringify(contactState.selectedUser) ? 'selected' : 'not-selected'} key={contact.name} onClick={() =>contactClick(index)}>\r\n                                                <td id='add'>\r\n                                                    <input type='checkbox' className='select-checkbox'/>\r\n                                                </td>\r\n                                                <td id='basic_info'>\r\n                                                    <Avathar colorCode={contact.avatharColor}  name={contact.name} width={40} height={40}/>\r\n                                                    <div className='details'>\r\n                                                        <div className='name'>\r\n                                                            {contact.name}\r\n                                                        </div>\r\n                                                        <span>\r\n                                                            {contact.email}\r\n                                                        </span>\r\n                                                        <div className='icons'>\r\n                                                            <img src={EditIcon} title='Edit' className='edit-contact' alt='Edit Icon' onClick={(e) => {\r\n                                                                e.stopPropagation(); \r\n                                                                setShowModal(true); \r\n                                                                setClickedIndex(index)\r\n                                                            }}/>\r\n                                                            <img src={DeleteIcon} title='Delete' className='delete-contact' alt='Delete-icon' onClick={ (e) => {\r\n                                                                e.stopPropagation();\r\n                                                                deleteContact(index);\r\n                                                            }} />                                               \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td id='company'>\r\n                                                    {contact.company}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                    \r\n                                }) \r\n                            }\r\n                        </tbody>\r\n                    </table> : \r\n                    <div className='no-contact-list'>\r\n                        Click on the add button to add new contact\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsList","E:\\MyFiles\\contact-list\\src\\Components\\SideBarComponent\\SideBarComponent.js",[],"E:\\MyFiles\\contact-list\\src\\Components\\HeaderComponent\\HeaderComponent.js",[],"E:\\MyFiles\\contact-list\\src\\Components\\CommonComponents\\Avathar.js",[],["52","53"],"E:\\MyFiles\\contact-list\\src\\Components\\AddContactModal\\AddContactModal.js",["54","55"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Modal, Input } from 'antd';\r\nimport { contactContext } from \"../../App\";\r\nimport 'antd/dist/antd.css';\r\nconst { TextArea } = Input;\r\n//import './Resources/styles.scss';\r\n\r\nconst AddContactModal = (props) => {\r\n    const emailReg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const colorArray = [\"#2F8DD8\",\"#E6809C\",\"#fca665\",\"#38c4fa\",\"#22d273\",\"#7c7dfe\",\"#59a7fe\",\"#e83e8c\",\"#9596fc\",\"#4bdedb\"];\r\n    const phoneRegex = /^\\d+$/;\r\n    const [isModalVisible, setIsModalVisible] = useState(props.showForm);\r\n    const [name, setName] = useState(props.userDetails.name ? props.userDetails.name : '');\r\n    const [email, setEmail] = useState(props.userDetails.email ? props.userDetails.email : '');\r\n    const [phone, setPhone] = useState(props.userDetails.phone ? props.userDetails.phone : '');\r\n    const [company, setCompany] = useState(props.userDetails.company ? props.userDetails.company : '');\r\n    const [address, setAddress] = useState(props.userDetails.address ? props.userDetails.address : '');\r\n    const [nameError, setNameError] = useState('');\r\n    const [phoneError, setPhoneError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [contactState, setContactState] = useContext(contactContext);\r\n\r\n    useEffect(() => {\r\n        setIsModalVisible(true);\r\n    }, [])\r\n\r\n    const handleOk = (e) => {\r\n        let emailerr = true;\r\n        let phoneerr = true;\r\n        let nameerr = true;\r\n        //Check Name\r\n        if(name.trim() === ''){\r\n            setNameError('Please enter a name');\r\n        }\r\n        else{\r\n            nameerr = false\r\n            setNameError('')\r\n        }\r\n\r\n        //Check Phone number\r\n        if(phone.trim() === ''){\r\n            setPhoneError('Please enter phone number');\r\n        }\r\n        else if(phone.length !== 10){\r\n            setPhoneError('Phone number should be 10 numbers')\r\n        }\r\n        else if(!phoneRegex.test(phone)){\r\n            setPhoneError('Phone number is not valid')\r\n        }\r\n        else{\r\n            if(!props.title.toLowerCase().includes('update')){\r\n                let flag = checkMobileNumber();\r\n                if(flag){  \r\n                    phoneerr = false\r\n                    setPhoneError('')\r\n                }\r\n            }\r\n            else{\r\n                phoneerr = false\r\n                setPhoneError('')\r\n            }\r\n            \r\n        }\r\n\r\n        //Check Email\r\n        if(email.trim() === ''){\r\n            setEmailError('Please enter email')\r\n        }\r\n        else if(!(emailReg.test(email))){\r\n            setEmailError('Invalid Email');\r\n        }\r\n        else{\r\n            setEmailError('');\r\n            emailerr = false\r\n        }\r\n\r\n        //Send Data to props\r\n        if(!emailerr && !phoneerr && !nameerr ){\r\n            let colorCode = colorArray[Math.floor(Math.random() * colorArray.length)]\r\n            if(props.userDetails.avatharColor){\r\n                colorCode = props.userDetails.avatharColor\r\n            }\r\n            let userObbj = {\r\n                'phone':phone,\r\n                'name' : name,\r\n                'email' : email,\r\n                'company' : company,\r\n                'address' : address,\r\n                'avatharColor':colorCode\r\n            }\r\n            props.onSave(userObbj);\r\n            setIsModalVisible(false)\r\n            props.onClose()\r\n        }\r\n    }\r\n\r\n    //checkMobileNumber function to check whether the given number is already stored.\r\n    const checkMobileNumber = () => {\r\n        let users = [...contactState.users];\r\n        const tempArray = users.filter((user) => {\r\n            if(user.phone === phone){\r\n                return user\r\n            }\r\n        })\r\n        if(tempArray.length > 0){\r\n            setPhoneError('Phone Number already saved')\r\n            return false\r\n        }\r\n        else{\r\n            return true\r\n        }\r\n    }\r\n    //handleCancel to close the model\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n        props.onClose();\r\n    }\r\n\r\n    //onNamechange to save the name\r\n    const onNamechange = (e) =>  {\r\n        setNameError('');\r\n        setName(e.target.value)\r\n    }\r\n\r\n    //onEmailChange to save the email\r\n    const onEmailChange = (e) => {\r\n        setEmailError('');\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    //onPhoneNumberChange to save the phone\r\n    const onPhoneNumberChange = e => {\r\n        setPhoneError('');\r\n        setPhone(e.target.value)\r\n    } \r\n\r\n    //onCompanyChange to save the email\r\n    const onCompanyChange = e => setCompany(e.target.value);\r\n\r\n    //onAddressChange to save the address\r\n    const onAddressChange = e => setAddress(e.target.value)\r\n\r\n    return(\r\n        <Modal title={props.title} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} okText={'Save'}>\r\n            <div className='fields'>\r\n                <div className='label'>Name <span className='required'>*</span></div>\r\n                <Input placeholder='Name' value={name} required={true} onChange={onNamechange} />\r\n                <div className='error'>{nameError}</div>\r\n            </div>\r\n            <div className='fields'>\r\n            <div className='label'>Email <span className='required'>*</span></div>\r\n                <Input placeholder='Email' value={email} required={true} onChange={onEmailChange}/>\r\n                <div className='error'>{emailError}</div>\r\n            </div>\r\n            <div className='fields'>\r\n            <div className='label'>Phone <span className='required'>*</span></div>\r\n                <Input placeholder='Phone' value={phone} required={true} onChange={onPhoneNumberChange} />\r\n                <div className='error'>{phoneError}</div>\r\n            </div>\r\n            <div className='fields'>\r\n                <div className='label'>Company</div>\r\n                <Input placeholder='Company' value={company} required={true} onChange={onCompanyChange}/>\r\n            </div>\r\n            <div className='fields'>\r\n                <div className='label'>Address</div>\r\n                <TextArea placeholder='Address' value={address} required={false} onChange={onAddressChange}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddContactModal;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":11,"column":8,"nodeType":"62","endLine":11,"endColumn":22,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"61","line":16,"column":7,"nodeType":"62","endLine":16,"endColumn":23,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":92,"column":73,"nodeType":"67","messageId":"68","endLine":92,"endColumn":75},{"ruleId":"56","replacedBy":"69"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":21,"column":26,"nodeType":"73","messageId":"74","endLine":21,"endColumn":41},{"ruleId":"65","severity":1,"message":"75","line":100,"column":47,"nodeType":"67","messageId":"68","endLine":100,"endColumn":49},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setContactState'. Either include it or remove the dependency array.","ArrayExpression",["78"],["79"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["76"],["77"],"no-unused-vars","'setContactState' is assigned a value but never used.","Identifier","unusedVar","Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"80","fix":"82"},"Update the dependencies array to be: [contactState, setContactState]",{"range":"83","text":"84"},{"range":"85","text":"84"},[384,398],"[contactState, setContactState]",[647,663]]